// Code generated by MockGen. DO NOT EDIT.
// Source: .\handler\todoController.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockITodoController is a mock of ITodoController interface.
type MockITodoController struct {
	ctrl     *gomock.Controller
	recorder *MockITodoControllerMockRecorder
}

// MockITodoControllerMockRecorder is the mock recorder for MockITodoController.
type MockITodoControllerMockRecorder struct {
	mock *MockITodoController
}

// NewMockITodoController creates a new mock instance.
func NewMockITodoController(ctrl *gomock.Controller) *MockITodoController {
	mock := &MockITodoController{ctrl: ctrl}
	mock.recorder = &MockITodoControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITodoController) EXPECT() *MockITodoControllerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockITodoController) Create(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Create", arg0, arg1)
}

// Create indicates an expected call of Create.
func (mr *MockITodoControllerMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockITodoController)(nil).Create), arg0, arg1)
}

// GetAll mocks base method.
func (m *MockITodoController) GetAll(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetAll", arg0, arg1)
}

// GetAll indicates an expected call of GetAll.
func (mr *MockITodoControllerMockRecorder) GetAll(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockITodoController)(nil).GetAll), arg0, arg1)
}

// Handle mocks base method.
func (m *MockITodoController) Handle(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Handle", arg0, arg1)
}

// Handle indicates an expected call of Handle.
func (mr *MockITodoControllerMockRecorder) Handle(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockITodoController)(nil).Handle), arg0, arg1)
}
